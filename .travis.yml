 
dist:     bionic
sudo:     required  # используем Virtual Machine (а не Docker container)

language: c      

os:
  # будем прогонять CI и на Linux, и на Mac OS X...
  - linux
  - osx

compiler:
  # ... и с помощью GCC, и Clang
  - gcc
  - clang

addons:
  apt:
    packages:
      - lcov
      - valgrind
      - cppcheck
      - make
      - cmake

script:
  # скрипт сборки и тестирования проекта:
  - ./linters/run.sh --local
  - mkdir build
  - cd build
  - cmake ..
  - make
  - ctest < ../test_data.txt --output-on-failure
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then valgrind --tool=memcheck --leak-check=yes ctest < ../test_data.txt ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then valgrind --tool=memcheck --leak-check=yes ./prog -c a.bin 6 < ../test_data.txt; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then valgrind --tool=memcheck --leak-check=yes ./prog -r a.bin; fi
  - cd ..
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cppcheck --enable=all --error-exitcode=1 -I include ./test ./src ./include/*.h --check-config ; fi
  
  after_success:
  # Create lcov report
  # capture coverage info
  - lcov --directory . --capture --output-file coverage.info
  # filter out system and extra files.
  # To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
  - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
  # output coverage data for debugging (optional)
  - lcov --list coverage.info
  # Uploading to CodeCov
  # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"